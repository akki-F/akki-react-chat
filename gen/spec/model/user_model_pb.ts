// @generated by protoc-gen-es v1.3.3 with parameter "target=ts,import_extension=.ts"
// @generated from file spec/model/user_model.proto (package spec.model, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { DateTime } from "../../google/type/datetime_pb.ts";

/**
 *
 * ユーザーモデル
 *
 * @generated from message spec.model.UserModel
 */
export class UserModel extends Message<UserModel> {
  /**
   * 【O】
   * 作成日時
   *
   * @generated from field: google.type.DateTime created_datetime = 1;
   */
  createdDatetime?: DateTime;

  /**
   * 【O】
   * 作成ユーザーId
   *
   * @generated from field: string created_user = 2;
   */
  createdUser = "";

  /**
   * 【O】
   * 作成機能
   *
   * @generated from field: string created_func = 3;
   */
  createdFunc = "";

  /**
   * 【O】
   * 更新日時
   *
   * @generated from field: google.type.DateTime updated_datetime = 4;
   */
  updatedDatetime?: DateTime;

  /**
   * 【O】
   * 更新ユーザーId
   *
   * @generated from field: string updated_user = 5;
   */
  updatedUser = "";

  /**
   * 【O】
   * 更新機能
   *
   * @generated from field: string updated_func = 6;
   */
  updatedFunc = "";

  constructor(data?: PartialMessage<UserModel>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "spec.model.UserModel";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "created_datetime", kind: "message", T: DateTime },
    { no: 2, name: "created_user", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "created_func", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "updated_datetime", kind: "message", T: DateTime },
    { no: 5, name: "updated_user", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "updated_func", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UserModel {
    return new UserModel().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UserModel {
    return new UserModel().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UserModel {
    return new UserModel().fromJsonString(jsonString, options);
  }

  static equals(a: UserModel | PlainMessage<UserModel> | undefined, b: UserModel | PlainMessage<UserModel> | undefined): boolean {
    return proto3.util.equals(UserModel, a, b);
  }
}

