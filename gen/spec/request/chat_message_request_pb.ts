// @generated by protoc-gen-es v1.3.3 with parameter "target=ts,import_extension=.ts"
// @generated from file spec/request/chat_message_request.proto (package spec.request, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { ChatMessageModel } from "../model/chat_message_model_pb.ts";
import { UserModel } from "../model/user_model_pb.ts";

/**
 *
 * チャットメッセージ取得処理APIリクエスト
 *
 * @generated from message spec.request.ChatMessageRequest
 */
export class ChatMessageRequest extends Message<ChatMessageRequest> {
  /**
   * 【M】
   * メッセージ
   *
   * @generated from field: spec.model.ChatMessageModel chat = 1;
   */
  chat?: ChatMessageModel;

  /**
   * 【O】
   * ユーザー情報
   *
   * @generated from field: spec.model.UserModel user = 2;
   */
  user?: UserModel;

  constructor(data?: PartialMessage<ChatMessageRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "spec.request.ChatMessageRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "chat", kind: "message", T: ChatMessageModel },
    { no: 2, name: "user", kind: "message", T: UserModel },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ChatMessageRequest {
    return new ChatMessageRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ChatMessageRequest {
    return new ChatMessageRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ChatMessageRequest {
    return new ChatMessageRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ChatMessageRequest | PlainMessage<ChatMessageRequest> | undefined, b: ChatMessageRequest | PlainMessage<ChatMessageRequest> | undefined): boolean {
    return proto3.util.equals(ChatMessageRequest, a, b);
  }
}

